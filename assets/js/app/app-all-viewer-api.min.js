/*
Copyright(c) 2012 Company Name
*/
Ext.Loader.setConfig({enabled:true,paths:{ICD:"Content/js/app/base/ICD",ICDD:"Content/js/app/base/ICDD",Viewer:"Content/js/app/base/viewer",Views:"Content/js/app/views"}});Ext.application({name:"ICDV",appFolder:"Content/js/app",autoCreateViewport:false,requires:["Viewer.ViewContainer"],init:function(){console.log("app::init");this.viewContainer=Ext.create("Viewer.ViewContainer",{eventBus:this.eventbus});Viewer.AppEvent.eventBus=this.eventbus},launch:function(){}});Ext.define("Viewer.ErrorMessage",{extend:"ICD.BaseController",singleton:true,content:null,title:null,constructor:function(){this.logMessage("ErrorMessage::constructor")}});Ext.define("Viewer.AppEvent",{extend:"ICD.BaseController",singleton:true,requires:["Viewer.ErrorMessage"],constructor:function(){console.log("AppEvent::constructor");this.callParent()},APP_ERROR:"appError",CONFIG_LOADED:"configLoaded",CONFIG_CHANGED:"configChanged",SET_STATUS:"setStatus",VIEW_RUN_REQUEST:"viewRunRequest",VIEW_CHANGE_STATE:"viewChangeState",VIEW_STATE_CHANGED:"viewStateChanged",VIEW_FOCUS:"viewFocus",VIEW_ADD:"viewAdd",VIEW_ADDED:"viewAdded",VIEW_CLOSE:"viewClose",CONTAINER_INITIALIZED:"containerInitialized",HIDE_LOADER:"hideLoader",SHOW_LOADER:"showLoader",DASHBOARDS_LIST_LOADED:"view:DashboardsListLoaded",DASHBOARD_CHANGED:"view:DashboardChanged",RESET_BUTTON_CLICKED:"view:resetButtomClicked",SUBMIT_BUTTON_CLICKED:"view:submitButtonClicked",DASHBOARD_SELECTLIST_COMPONENT_LOADED:"dashboardSelectListComponentLoaded",dispatch:function(c,b){var a=this.getEventBus();if(a){a.fireEvent(c,b)}},addLnr:function(c,e,d,b){var a=this.getEventBus();if(a){a.on(c,e,d,b)}},removeLnr:function(b,a){var c=this.getApp();if(c){c.un(b,a)}},setStatus:function(a){this.dispatch(this.SET_STATUS,a)},showError:function(b,c){var a=Ext.create("Viewer.ErrorMessage",{content:b,title:c});this.fireEvent(this.APP_ERROR,a)},getEventBus:function(){if(this.eventBus){return eventBus}else{console.error("AppEvent:getEventBus this.eventBus is undefined.");return this}return false}});Ext.define("Viewer.managers.ConfigManager",{extend:"ICD.BaseController",name:"configManager",requires:["Viewer.AppEvent","ICD.Ext.data.Store"],constructor:function(a){console.log("ConfigManager::constructor");this.callParent();if(a){if(a.eventBus){this.appEvent=Viewer.AppEvent;this.eventBus=a.eventBus;if(a.configFile){this.configFile=a.configFile;this.eventBus.on(Viewer.AppEvent.CONTAINER_INITIALIZED,this.onContainerInitialized,this)}else{console.error("ConfigManager::constructor config.configFile is undefined")}}else{console.error("ConfigManager::constructor config.eventBus is undefined")}}else{console.error("ConfigManager::constructor config is undefined")}},onContainerInitialized:function(){this.initStore()},initStore:function(){if(this.configFile){this.store=Ext.create("ICD.Ext.data.Store",{model:"Viewer.managers.ConfigManagerModel",proxy:{type:"ajax",url:this.configFile,reader:{type:"json",root:"configuration"}},autoLoad:true});this.store.on("load",this.onload,this);this.store.on("datachanged",this.onDataChanged,this)}},onload:function(b,a,e,c){if(this.store&&this.store.getAt(0)&&this.store.getAt(0).getData()){var d=this.store.getAt(0).getData();console.log(d);this.eventBus.fireEvent(this.appEvent.CONFIG_LOADED,d,this.store)}else{console.error("ConfigManager::onDataChanged cannot access data")}},onDataChanged:function(a,b){console.log("ConfigManager::onDataChanged");if(this.store&&this.store.getAt(0)&&this.store.getAt(0).getData()){var c=this.store.getAt(0).getData();this.eventBus.fireEvent(this.appEvent.CONFIG_CHANGED,c)}else{console.error("ConfigManager::onDataChanged cannot access data")}}});Ext.define("Viewer.managers.ConfigManagerModel",{extend:"ICD.Ext.data.Model",fields:[{name:"version",type:"string"},{name:"configDir",type:"string"},{name:"viewDir",type:"string"},{name:"title",type:"string"},{name:"subTitle",type:"string"},{name:"style",type:"array"},{name:"splashView",type:"object"},{name:"viewContainer",type:"object"}]});Ext.define("Viewer.managers.DataManager",{extend:"ICD.BaseController",constructor:function(a){console.log("DataManager::constructor");this.callParent();if(a){if(a.eventBus){this.appEvent=Viewer.AppEvent;this.eventBus=a.eventBus;this.eventBus.addListener(this.appEvent.CONFIG_LOADED,this.onConfigLoaded,this)}else{console.error("DataManager::constructor config.eventBus is undefined")}}else{console.error("DataManager::constructor config is undefined")}},onConfigLoaded:function(a){console.log("DataManager::onConfigLoaded");this.init()},init:function(){console.log("DataManager::init")}});Ext.define("Viewer.managers.ViewportManager",{extend:"ICD.BaseController",constructor:function(a){console.log("ViewportManager::constructor");this.callParent();if(a){if(a.eventBus){this.appEvent=Viewer.AppEvent;this.eventBus=a.eventBus;this.eventBus.addListener(this.appEvent.CONFIG_LOADED,this.onConfigLoaded,this)}else{console.error("ViewportManager::constructor config.eventBus is undefined")}}else{console.error("ViewportManager::constructor config is undefined")}},onConfigLoaded:function(a){console.log("ViewportManager::onConfigLoaded");this.init()},init:function(){console.log("ViewportManager::init")}});Ext.define("Viewer.managers.UIManager",{extend:"ICD.BaseController",constructor:function(a){console.log("UIManager::constructor");this.callParent();if(a){if(a.eventBus){this.appEvent=Viewer.AppEvent;this.eventBus=a.eventBus;this.eventBus.addListener(this.appEvent.CONFIG_LOADED,this.onConfigLoaded,this)}else{console.error("UIManager::constructor config.eventBus is undefined")}}else{console.error("UIManager::constructor config is undefined")}},onConfigLoaded:function(a){console.log("UIManager::onConfigLoaded");this.init()},init:function(){console.log("UIManager::init")}});Ext.define("Viewer.managers.ViewsManager",{extend:"ICD.BaseController",requires:["Viewer.AppEvent","ICD.Ext.data.Store"],viewList:[],constructor:function(a){console.log("ViewsManager::constructor");this.callParent();if(a){if(a.eventBus){this.appEvent=Viewer.AppEvent;this.eventBus=a.eventBus;this.eventBus.addListener(this.appEvent.CONFIG_LOADED,this.onConfigLoaded,this)}else{console.error("ViewsManager::constructor config.viewDir is undefined")}}else{console.error("ViewsManager::constructor config is undefined")}},onConfigLoaded:function(b,a){console.log("ViewsManager::onConfigLoaded");if(a){this.configStore=a;this.init()}else{console.error("ViewsManager::onConfigLoaded: store is undefined")}},init:function(){console.log("ViewsManager::init");this.startLoadViews()},startLoadViews:function(){if(this.configStore){if(this.configStore.getAt(0)&&this.configStore.getAt(0).getData()){var a=this.configStore.getAt(0).getData();if(a.viewContainer){this.store=Ext.create("ICD.Ext.data.Store",{model:"Viewer.managers.ViewsManagerModel",data:a.viewContainer});Ext.Array.forEach(a.viewContainer.views,function(b,c,d){this.viewList.push(b)},this);this.loadNextView()}else{console.error("ViewsManager::startLoadViewContainers: data.viewContainer is undefined")}}else{console.error("ViewsManager::startLoadViewContainers: this.configStore is missing data")}}else{console.error("ViewsManager::startLoadViewContainers: this.configStore is undefined")}},loadNextView:function(){if(this.viewList.length>0){var a=this.viewList[0];this.viewList.splice(0,1);this.loadView(a)}else{console.log("ViewsManager::loadNextView: All Views are loaded")}},loadView:function(a){if(a){var b=this.getViewDir();if(b){if(a.namespace){a.viewDir=this.getViewDir();a.eventBus=this.getEventBus();Ext.require(a.namespace);Ext.create(a.namespace,a);this.loadNextView()}else{console.error("ViewsManager::loadViewComtainer: viewConfig.namespace is undefined")}}}else{console.error("ViewsManager::loadViewComtainer: viewConfig is undefined")}},getAppConfigData:function(){var a;if(this.configStore){a=Ext.pluck(this.configStore.data.items,"data");if(a&&a[0]){a=a[0]}else{this.logError("ViewsManager::getAppConfigData: data is undefined or missing values.")}}else{this.logError("ViewsManager::getAppConfigData: this.configStore is undefined")}return a},getVersion:function(){var a;if(this.version){a=this.version}else{var b=this.getAppConfigData();if(b&&b.version){this.version=a=b.version}else{this.logWarning("ViewsManager::getVersion: data or data.version is undefined")}}return a},getConfigDir:function(){var a;if(this.configDir){a=this.configDir}else{var b=this.getAppConfigData();if(b&&b.configDir){this.configDir=a=b.configDir}else{this.logWarning("ViewsManager::getVersion: data or data.configDir is undefined")}}return a},getViewDir:function(){var a;if(this.viewDir){a=this.viewDir}else{var b=this.getAppConfigData();if(b&&b.viewDir){this.viewDir=a=b.viewDir}else{this.logWarning("ViewsManager::getVersion: data or data.viewDir is undefined")}}return a},getEventBus:function(){if(this.eventBus){return this.eventBus}else{console.error("ViewsManager::getEventBus: this.eventBus is undefined")}return false}});Ext.define("Viewer.managers.ViewsManagerModel",{extend:"ICD.Ext.data.Model",fields:[{name:"layout",type:"string"},{name:"views",type:"array"}]});Ext.define("Viewer.ViewContainer",{extend:"ICD.BaseController",requires:["Viewer.AppEvent","Viewer.managers.ConfigManager","Viewer.managers.DataManager","Viewer.managers.ViewportManager","Viewer.managers.UIManager","Viewer.managers.ViewsManager"],VERSION:"ICD Viewer for ExtJs",DEFAULT_CONFIG_FILE:"views-default.json",configDir:"data/",configFile:null,viewDir:"Content/js/app/views/",constructor:function(a){console.log("ViewContainer::constructor");if(a){if(a.eventBus){this.eventBus=a.eventBus;this.setViewDir();this.setUrlConfigParams();this.setConfigFile();this.configFile=(this.configFile)?this.configFile:this.DEFAULT_CONFIG_FILE;this.configManager=Ext.create("Viewer.managers.ConfigManager",{configFile:this.configFile,eventBus:this.eventBus});this.dataManager=Ext.create("Viewer.managers.DataManager",{eventBus:this.eventBus});this.viewportManager=Ext.create("Viewer.managers.ViewportManager",{eventBus:this.eventBus});this.uiManager=Ext.create("Viewer.managers.UIManager",{eventBus:this.eventBus});this.viewsManager=Ext.create("Viewer.managers.ViewsManager",{eventBus:this.eventBus,viewDir:this.viewDir});this.eventBus.on(Viewer.AppEvent.CONFIG_LOADED,this.onConfigLoad,this);this.eventBus.fireEvent(Viewer.AppEvent.CONTAINER_INITIALIZED)}else{console.error("ViewContainer::constructor config.eventBus is undefined.")}}else{console.error("ViewContainer::constructor config is undefined.")}},setViewDir:function(){this.viewDir="Content/js/app/views/"},setUrlConfigParams:function(){var a=document.URL.split("?");if(a.length>1){this.urlConfigParams=Ext.urlDecode(a[a.length-1])}},setConfigFile:function(){var a=(this.urlConfigParams&&this.urlConfigParams.config)?this.urlConfigParams.config:this.DEFAULT_CONFIG_FILE;if(a){if(this.configDir){this.configFile=this.configDir+a}else{console.error("ViewContainer::setConfigFile: this.configDir is undefined.")}}else{console.error("ViewContainer::setConfigFile: configFileName is undefined.")}},onConfigLoad:function(b,a){console.log("ViewContainer::onConfigLoad");if(a){this.store=a;if(b){if(b.splashView){var c=b.splashView;this.loadSplashView(c)}else{console.warn("ViewContainer::onConfigLoad: data.splashView is undefined")}}else{console.error("ViewContainer::onConfigLoad: data is undefined")}}else{console.error("ViewContainer::onConfigLoad: store is undefined")}},loadSplashView:function(a){if(a.namespace){Ext.require(a.namespace);if(this.viewDir){a.viewDir=this.viewDir;Ext.create(a.namespace,a)}else{this.logError("ViewContainer::loadSplashView: this.viewDir is undefined")}}else{this.logError("ViewContainer::loadSplashView: config.namespace is undefined")}},onLoadSplashView:function(a){if(a){if(this.viewDir){a.viewDir=this.viewDir;if(a.namespace){Ext.create(a.namespace,a)}else{console.error("ViewContainer::onLoadSplashView: config.namespace is undefined")}}}else{console.error("ViewContainer::onLoadSplashView: config is undefined.")}},onLoadSplashViewError:function(a){console.error("ViewContainer::onLoadSplashViewError: "+a.label+" had a problem loading")}});Ext.define("Viewer.base.Controller",{extend:"ICD.BaseController",requires:["Viewer.AppEvent"],constructor:function(a){this.callParent(a)},getEventBus:function(){var a;if(Viewer.AppEvent.eventBus){a=Viewer.AppEvent.eventBus}else{this.logError("Dashboards::getEventBus: Viewer.AppEvent.eventBus is undefined")}return a},getStore:function(){if(this.store){return this.store}else{console.error("Dashboards::getStore: this.store is undefined")}return false}});Ext.define("Viewer.base.Model",{extend:"ICD.BaseModel"});Ext.define("Viewer.base.Store",{extend:"ICD.BaseStore",getStoreJsonData:function(){var a=Ext.pluck(this.data.items,"data");if(!a){this.logError("BaseStore::getStoreJsonData: data is undefined")}else{if(Ext.isArray(a)&&a.length==1){a=a[0]}}return a}});
